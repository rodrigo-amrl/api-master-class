openapi: 3.0.3
info:
  title: 'Tickets Api Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: "Authenticate the user and returns the user's API token"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: '{YOUR_TOKEN}'
                    message: Authenticated
                    status: 200
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: '{YOUR_TOKEN}'
                      message:
                        type: string
                        example: Authenticated
                      status:
                        type: integer
                        example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tiana80@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'c7{XWiz;'
                  nullable: false
              required:
                - email
                - password
      security: []
    get:
      summary: ''
      operationId: getApiLogin
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Authenticated'
      tags:
        - Endpoints
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Signs out the user and destroy's the API  token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  name: 'Ms. Lizzie Krajcik'
                  email: holden.welch@example.org
                  email_verified_at: '2024-12-13T01:48:05.000000Z'
                  is_manager: 0
                  created_at: '2024-12-13T01:48:05.000000Z'
                  updated_at: '2024-12-13T01:48:05.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  name:
                    type: string
                    example: 'Ms. Lizzie Krajcik'
                  email:
                    type: string
                    example: holden.welch@example.org
                  email_verified_at:
                    type: string
                    example: '2024-12-13T01:48:05.000000Z'
                  is_manager:
                    type: integer
                    example: 0
                  created_at:
                    type: string
                    example: '2024-12-13T01:48:05.000000Z'
                  updated_at:
                    type: string
                    example: '2024-12-13T01:48:05.000000Z'
      tags:
        - Endpoints
  '/api/v1/tickets/{id}':
    get:
      summary: ''
      operationId: getApiV1TicketsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 1
                    attributes:
                      title: 'Magni necessitatibus quod.'
                      description: 'Inventore asperiores omnis similique aut possimus. Deleniti illum perspiciatis et dolore. Laborum sint est vitae aut. In fuga recusandae eveniet voluptas suscipit itaque nam natus.'
                      status: C
                      created_at: '2024-12-13T01:48:05.000000Z'
                      updated_at: '2024-12-13T01:48:05.000000Z'
                    links:
                      self: 'http://localhost/api/v1/tickets/1'
                    relationships:
                      author:
                        links:
                          self: 'http://localhost/api/v1/authors/10'
                        data:
                          type: user
                          id: 10
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'Magni necessitatibus quod.'
                          description:
                            type: string
                            example: 'Inventore asperiores omnis similique aut possimus. Deleniti illum perspiciatis et dolore. Laborum sint est vitae aut. In fuga recusandae eveniet voluptas suscipit itaque nam natus.'
                          status:
                            type: string
                            example: C
                          created_at:
                            type: string
                            example: '2024-12-13T01:48:05.000000Z'
                          updated_at:
                            type: string
                            example: '2024-12-13T01:48:05.000000Z'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost/api/v1/tickets/1'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost/api/v1/authors/10'
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 10
      tags:
        - Endpoints
    delete:
      summary: ''
      operationId: deleteApiV1TicketsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    put:
      summary: ''
      operationId: putApiV1TicketsTicket_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: natus
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Aut provident deleniti omnis laboriosam hic.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: H
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 20
                                  nullable: false
    patch:
      summary: ''
      operationId: patchApiV1TicketsTicket_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: doloribus
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Necessitatibus libero consequatur quas nulla mollitia corrupti minima occaecati.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: X
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
                                  nullable: false
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: ''
      operationId: getApiV1Users
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    type: adMethodCallException
                    status: 0
                    message: 'Call to undefined method App\Models\User::filter()'
                properties:
                  errors:
                    type: object
                    properties:
                      type:
                        type: string
                        example: adMethodCallException
                      status:
                        type: integer
                        example: 0
                      message:
                        type: string
                        example: 'Call to undefined method App\Models\User::filter()'
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV1Users
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: quidem
                          nullable: false
                        email:
                          type: string
                          description: ''
                          example: kaylah.thompson@example.com
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: true
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: "U'*TVIN7)"
                          nullable: false
  '/api/v1/users/{id}':
    get:
      summary: ''
      operationId: getApiV1UsersId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    type: UrlGenerationException
                    status: 0
                    message: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
                properties:
                  errors:
                    type: object
                    properties:
                      type:
                        type: string
                        example: UrlGenerationException
                      status:
                        type: integer
                        example: 0
                      message:
                        type: string
                        example: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
      tags:
        - Endpoints
    delete:
      summary: ''
      operationId: deleteApiV1UsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user}':
    put:
      summary: ''
      operationId: putApiV1UsersUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: voluptas
                          nullable: false
                        email:
                          type: string
                          description: ''
                          example: orn.miles@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: '%B2pFi7=2\+tQ#b['
                          nullable: false
    patch:
      summary: ''
      operationId: patchApiV1UsersUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: mollitia
                          nullable: false
                        email:
                          type: string
                          description: ''
                          example: cummerata.aurelie@example.com
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: $bTuL+
                          nullable: false
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: ''
      operationId: getApiV1Authors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    type: adMethodCallException
                    status: 0
                    message: 'Call to undefined method Illuminate\Database\Eloquent\Builder::filter()'
                properties:
                  errors:
                    type: object
                    properties:
                      type:
                        type: string
                        example: adMethodCallException
                      status:
                        type: integer
                        example: 0
                      message:
                        type: string
                        example: 'Call to undefined method Illuminate\Database\Eloquent\Builder::filter()'
      tags:
        - Endpoints
  '/api/v1/authors/{id}':
    get:
      summary: ''
      operationId: getApiV1AuthorsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    type: UrlGenerationException
                    status: 0
                    message: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
                properties:
                  errors:
                    type: object
                    properties:
                      type:
                        type: string
                        example: UrlGenerationException
                      status:
                        type: integer
                        example: 0
                      message:
                        type: string
                        example: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: ''
      operationId: getApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/authors/quia/tickets?page=1'
                    last: 'http://localhost/api/v1/authors/quia/tickets?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors/quia/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors/quia/tickets'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors/quia/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors/quia/tickets?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors/quia/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors/quia/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title."
                          example: null
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: 'Ticket description'
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's status."
                          example: A
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: 'The author id'
                                  example: 5
                                  nullable: false
                author:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: false
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: quia
        required: true
        schema:
          type: string
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1AuthorsAuthor_idTicketsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: odio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  name: 'Ms. Lizzie Krajcik'
                  email: holden.welch@example.org
                  email_verified_at: '2024-12-13T01:48:05.000000Z'
                  is_manager: 0
                  created_at: '2024-12-13T01:48:05.000000Z'
                  updated_at: '2024-12-13T01:48:05.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  name:
                    type: string
                    example: 'Ms. Lizzie Krajcik'
                  email:
                    type: string
                    example: holden.welch@example.org
                  email_verified_at:
                    type: string
                    example: '2024-12-13T01:48:05.000000Z'
                  is_manager:
                    type: integer
                    example: 0
                  created_at:
                    type: string
                    example: '2024-12-13T01:48:05.000000Z'
                  updated_at:
                    type: string
                    example: '2024-12-13T01:48:05.000000Z'
      tags:
        - Endpoints
  /api/v1/tickets:
    get:
      summary: 'Get All Tickets'
      operationId: getAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data fild(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: 'sort=title,-createdAt'
          required: false
          schema:
            type: string
            description: 'Data fild(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: 'sort=title,-createdAt'
            nullable: false
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H, X.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H, X.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcards are supported.'
          example: '*fix*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcards are supported.'
            example: '*fix*'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 101
                      attributes:
                        title: 'First Ticket'
                        status: A
                        created_at: '2024-12-14T20:55:33.000000Z'
                        updated_at: '2024-12-14T20:55:33.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/101'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                          data:
                            type: user
                            id: 1
                    -
                      type: ticket
                      id: 89
                      attributes:
                        title: 'Molestiae animi perspiciatis facilis.'
                        status: A
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/89'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/8'
                          data:
                            type: user
                            id: 8
                    -
                      type: ticket
                      id: 85
                      attributes:
                        title: 'Et officiis reprehenderit iure.'
                        status: H
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/85'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                          data:
                            type: user
                            id: 3
                    -
                      type: ticket
                      id: 86
                      attributes:
                        title: 'Harum ipsam exercitationem qui.'
                        status: H
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/86'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                    -
                      type: ticket
                      id: 87
                      attributes:
                        title: 'Possimus et officiis.'
                        status: A
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/87'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                          data:
                            type: user
                            id: 3
                    -
                      type: ticket
                      id: 88
                      attributes:
                        title: 'Est tempora exercitationem.'
                        status: H
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/88'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                    -
                      type: ticket
                      id: 90
                      attributes:
                        title: 'Voluptatem et enim reiciendis.'
                        status: C
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/90'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/9'
                          data:
                            type: user
                            id: 9
                    -
                      type: ticket
                      id: 91
                      attributes:
                        title: 'Eum dolore eaque.'
                        status: A
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/91'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/4'
                          data:
                            type: user
                            id: 4
                    -
                      type: ticket
                      id: 92
                      attributes:
                        title: 'Quo autem eaque amet.'
                        status: C
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/92'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/6'
                          data:
                            type: user
                            id: 6
                    -
                      type: ticket
                      id: 93
                      attributes:
                        title: 'Hic quam in odio.'
                        status: C
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/93'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/7'
                          data:
                            type: user
                            id: 7
                    -
                      type: ticket
                      id: 94
                      attributes:
                        title: 'Quae deserunt voluptatem.'
                        status: C
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/94'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/3'
                          data:
                            type: user
                            id: 3
                    -
                      type: ticket
                      id: 95
                      attributes:
                        title: 'Blanditiis ut explicabo.'
                        status: C
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/95'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/1'
                          data:
                            type: user
                            id: 1
                    -
                      type: ticket
                      id: 96
                      attributes:
                        title: 'Maxime laborum facilis quia.'
                        status: A
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/96'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                    -
                      type: ticket
                      id: 97
                      attributes:
                        title: 'Qui quis dolorem aut.'
                        status: H
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/97'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/6'
                          data:
                            type: user
                            id: 6
                    -
                      type: ticket
                      id: 98
                      attributes:
                        title: 'Omnis molestias reiciendis enim.'
                        status: H
                        created_at: '2024-12-13T01:48:06.000000Z'
                        updated_at: '2024-12-13T01:48:06.000000Z'
                      links:
                        self: 'http://localhost/api/v1/tickets/98'
                      relationships:
                        author:
                          links:
                            self: 'http://localhost/api/v1/authors/10'
                          data:
                            type: user
                            id: 10
                  links:
                    first: 'http://localhost/api/v1/tickets?page=1'
                    last: 'http://localhost/api/v1/tickets?page=7'
                    prev: null
                    next: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 7
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/tickets'
                    per_page: 15
                    to: 15
                    total: 101
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 101
                        attributes:
                          title: 'First Ticket'
                          status: A
                          created_at: '2024-12-14T20:55:33.000000Z'
                          updated_at: '2024-12-14T20:55:33.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/101'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                            data:
                              type: user
                              id: 1
                      -
                        type: ticket
                        id: 89
                        attributes:
                          title: 'Molestiae animi perspiciatis facilis.'
                          status: A
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/89'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/8'
                            data:
                              type: user
                              id: 8
                      -
                        type: ticket
                        id: 85
                        attributes:
                          title: 'Et officiis reprehenderit iure.'
                          status: H
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/85'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                            data:
                              type: user
                              id: 3
                      -
                        type: ticket
                        id: 86
                        attributes:
                          title: 'Harum ipsam exercitationem qui.'
                          status: H
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/86'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                      -
                        type: ticket
                        id: 87
                        attributes:
                          title: 'Possimus et officiis.'
                          status: A
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/87'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                            data:
                              type: user
                              id: 3
                      -
                        type: ticket
                        id: 88
                        attributes:
                          title: 'Est tempora exercitationem.'
                          status: H
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/88'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                      -
                        type: ticket
                        id: 90
                        attributes:
                          title: 'Voluptatem et enim reiciendis.'
                          status: C
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/90'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/9'
                            data:
                              type: user
                              id: 9
                      -
                        type: ticket
                        id: 91
                        attributes:
                          title: 'Eum dolore eaque.'
                          status: A
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/91'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/4'
                            data:
                              type: user
                              id: 4
                      -
                        type: ticket
                        id: 92
                        attributes:
                          title: 'Quo autem eaque amet.'
                          status: C
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/92'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/6'
                            data:
                              type: user
                              id: 6
                      -
                        type: ticket
                        id: 93
                        attributes:
                          title: 'Hic quam in odio.'
                          status: C
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/93'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/7'
                            data:
                              type: user
                              id: 7
                      -
                        type: ticket
                        id: 94
                        attributes:
                          title: 'Quae deserunt voluptatem.'
                          status: C
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/94'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/3'
                            data:
                              type: user
                              id: 3
                      -
                        type: ticket
                        id: 95
                        attributes:
                          title: 'Blanditiis ut explicabo.'
                          status: C
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/95'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/1'
                            data:
                              type: user
                              id: 1
                      -
                        type: ticket
                        id: 96
                        attributes:
                          title: 'Maxime laborum facilis quia.'
                          status: A
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/96'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                      -
                        type: ticket
                        id: 97
                        attributes:
                          title: 'Qui quis dolorem aut.'
                          status: H
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/97'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/6'
                            data:
                              type: user
                              id: 6
                      -
                        type: ticket
                        id: 98
                        attributes:
                          title: 'Omnis molestias reiciendis enim.'
                          status: H
                          created_at: '2024-12-13T01:48:06.000000Z'
                          updated_at: '2024-12-13T01:48:06.000000Z'
                        links:
                          self: 'http://localhost/api/v1/tickets/98'
                        relationships:
                          author:
                            links:
                              self: 'http://localhost/api/v1/authors/10'
                            data:
                              type: user
                              id: 10
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 101
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'First Ticket'
                            status:
                              type: string
                              example: A
                            created_at:
                              type: string
                              example: '2024-12-14T20:55:33.000000Z'
                            updated_at:
                              type: string
                              example: '2024-12-14T20:55:33.000000Z'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost/api/v1/tickets/101'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                links:
                                  type: object
                                  properties:
                                    self:
                                      type: string
                                      example: 'http://localhost/api/v1/authors/1'
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 1
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=7'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 7
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 101
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a tickets'
      operationId: createATickets
      description: 'Creates a new ticket. Users can only create tickets for themselves. Managers can create tickets for any user.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title."
                          example: null
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: 'Ticket description'
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's status."
                          example: A
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: 'The author id'
                                  example: 15
                                  nullable: false
              required:
                - data
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
